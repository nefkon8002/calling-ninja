## <!-- Designed by Neftali Ramirez Chavez Junio 2023 nefkon80@gmail.com -->
version: '2'
services:
  nginx-proxy:
    image: nramirez/nginx-proxy:1.1.0
    volumes:
     #- $HOME/docker/nginx-proxy/nginx-proxy-prod/certs:/etc/nginx/certs:ro
     - /etc/nginx/vhost.d:/etc/nginx/vhost.d
    #  - /usr/share/nginx/html:/usr/share/nginx/html
     - /var/run/docker.sock:/tmp/docker.sock:ro
    #  - ./nginx_ninja.tmpl:/etc/docker-gen/templates/nginx.tmpl
     - ./certs:/etc/nginx/certs
    #  - /etc/nginx/conf.d/
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    environment: 
      DEBUG: "true"
    ports: 
        - "80:80"
        - "443:443"
    networks:
      - reverse-proxy

  # dockergen:
  #   image: jwilder/docker-gen
  #   labels:
  #     com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "dockergen"
  #   command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  #   volumes_from:
  #     - nginx-proxy
  #   volumes:
  #     - ./nginx.cloud.tmpl:/etc/docker-gen/templates/nginx.tmpl
  #   networks:
  #     - reverse-proxy  
      
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from: 
      - nginx-proxy
    volumes:
      - $HOME/docker/nginx-proxy/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro 
    networks:
      - reverse-proxy

networks: 
  reverse-proxy: 
    external: 
      name: reverse-proxy 
  # back: 
  #   driver: overlay      
  back: 
    driver: bridge  
