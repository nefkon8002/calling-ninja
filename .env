## <!-- Designed by Neftali Ramirez Chavez Junio 2023 nefkon80@gmail.com -->

# Password for the 'elastic' user (at least 6 characters)
ELASTIC_PASSWORD=rootpwd

# Password for the 'kibana_system' user (at least 6 characters)
KIBANA_PASSWORD=rootpwd

# Version of Elastic products
STACK_VERSION=8.1.2

# Set the cluster name
CLUSTER_NAME=docker-cluster

# Set to 'basic' or 'trial' to automatically start the 30-day trial
LICENSE=basic
#LICENSE=trial

# Port to expose Elasticsearch HTTP API to the host
ES_PORT=9200
#ES_PORT=127.0.0.1:9200

# Port to expose Kibana to the host
KIBANA_PORT=5601
#KIBANA_PORT=80

# Increase or decrease based on the available host memory (in bytes)
MEM_LIMIT=1073741824

# Project namespace (defaults to the current folder name if not set)
#COMPOSE_PROJECT_NAME=myproject


USER_ID=1000
GROUP_ID=1000
##--------------------------------------------------------
# MYSQL_USER=proxy
# MYSQL_PASSWORD=Passw0rd
# MYSQL_DATABASE=configuracionesdb
# MYSQL_ROOT_PASSWORD=rootpwd

##----------------------------------------------------------------------------------------------------
# MYSQL_USER=aplicaciones
# MYSQL_PASSWORD=VZZTsAFAZKVW6TkwKD
# MYSQL_DATABASE=configuracionesdb
# MYSQL_ROOT_PASSWORD=rootpwd
MYSQL_USER=postgres
MYSQL_PASSWORD=VZZTsAFAZKVW6TkwKD
MYSQL_DATABASE=callingninja
MYSQL_ROOT_PASSWORD=rootpwd
##----------------------------------------------------------------------------------------------------


# DB_VERS=configuracionesdb
# US_VERS=proxy
# PS_VERS=Passw0rd
DB_VERS=ConfiguracionesDB
US_VERS=aplicaciones
PS_VERS=VZZTsAFAZKVW6TkwKD
DB_HOST=mysqldb
# DB_HOST=localhost
# LDAP_URL='ldap://10.50.220.9/DC=totalplay,DC=corp'
# LDAP_URL='ldap://10.216.20.175/DC=totalplay,DC=corp'
LDAP_URL=ldap://172.24.2.4/DC=totalplay,DC=corp

#-----------OAUT-REST-API--------------------
OPEN_CAGE_DATA_KEY=8c0892514e884f09af7c09a9b067b02b
# DATABASE_URL=mysqldb:3306
REDIS_URL=redis://redisdb:6379
CLOUDAMQP_URL=amqp://rabbitmq:5672
DB_CFG=ConfiguracionesDB
USER_CFG=aplicaciones
PASS_CFG=VZZTsAFAZKVW6TkwKD
HOST_CFG=mysqldb
DIALECT_CFG=mysql

JWT_SECRET_KEY=neAlqddZ-taeC7xlIdFGwBz5ct3NV-XbBmC0



CMDB_VERS=datahub
CMDB_US_VERS=app_cmdb
CMDB_PS_VERS=HuceSEtS7XxDxt4S6a
# CMDB_HOST=localhost
CMDB_HOST=mysqlcmdb
# cmdburl=jdbc:mariadb://10.180.251.84:3306/datahub
# user=app_cmdb
# pwd=HuceSEtS7XxDxt4S6a

##----------------------------------------------------------------------------------------------------
# NODE_ENV=production
# NODE_ENV=test
NODE_ENV=development
MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=rootpwd
# MONGO_INITDB_DATABASE=concentrador_gds
# MONGODB_USERNAME=AgencyPage
# MONGODB_PASSWORD=HotelesVuelos$1
# MONGODB_DATABASE=concentrador_gds
# MONGO_INITDB_DATABASE=document-tasks
MONGO_INITDB_DATABASE=callingninja
MONGODB_USERNAME=schedulerTask
MONGODB_PASSWORD=password
# MONGODB_DATABASE=document-tasks
MONGODB_DATABASE=callingninja
# MONGODB_URL_CONNECTION=mongodb://schedulerTask:password@mongodb:27017/document-tasks
MONGODB_URL_CONNECTION=mongodb://schedulerTask:password@callingninja-mongodb:27017/callingninja

MONGO_EXECUTION_COLLECTION_NAME=task-execution
MONGO_TASK_COLLECTION_NAME=tasks
MONGO_TASK_DB_NAME=document-tasks
##----------------------------------------------------------------------------------------------------

# KAFKA_TOPIC_NAME=
KAFKA_TOPIC_NAME_WORKER_02=psql-.ConfiguracionesDB.TA_SMS_QUERY_CAMPAING_DATEs
KAFKA_TOPIC_NAME_WORKER_03=psql-.ConfiguracionesDB.TA_SMS_QUERY_CAMPAING_DETAILs
KAFKA_TOPIC_NAME_WORKER_04=psql-.ConfiguracionesDB.TA_SMS_WRITE_CAMPAING_DETAILs

KAFKA_WORKER_02_GROUP_ID=sms-worker-02-group
KAFKA_WORKER_03_GROUP_ID=sms-worker-03-group
KAFKA_WORKER_04_GROUP_ID=sms-worker-04-group

KAFKA_HOST=kafka01.internal:9092
##--------------------------------------------------------

REDIS_COMMAND=redis-server

MYSQL_DB_HOST=callingninja-mysqldb:3306
MONGODB_DB_HOST=callingninja-mongodb:27017
REDIS_DB_HOST=redisdb:6379



PORT_TASK_SERVER=8095




# MICRO_ENABLE_TLS=true

# MICRO_TLS_CERT_FILE=/certs/micro.dc1.plusnetwork.com.mx.crt.pem
# MICRO_TLS_KEY_FILE=/certs/micro.dc1.plusnetwork.com.mx.key
# MICRO_TLS_CLIENT_CA_FILE=/certs/micro.dc1.plusnetwork.com.mx.ca.pem

# MICRO_TRANSPORT=http
# MICRO_WEB_ADDRESS=micro:8503
# MICRO_API_ADDRESS=micro:8502
# MICRO_SERVER_ADDRESS=micro:8502
# MICRO_SERVER_ADVERTISE=micro:8502
# MICRO_SERVICE_ENDPOINT=consul:8501
# MICRO_REGISTRY=consul
# MICRO_REGISTRY_ADDRESS=consul:8501
# MICRO_API_ENABLE_RPC=true
# CONSUL_COMMAND=agent -data-dir=/data -config-dir=/config -server -bootstrap -rejoin
##--------------------------------------------------------

#MICRO_SERVICE_ENDPOINT=server1.dc1.plusnetwork.com.mx:8501
#MICRO_API_ADDRESS=server1.dc1.plusnetwork.com.mx:8501
#MICRO_REGISTRY=server1.dc1.plusnetwork.com.mx
#MICRO_REGISTRY_ADDRESS=server1.dc1.plusnetwork.com.mx:8501

#MICRO_TLS_CERT_FILE=/certs/client1.dc1.plusnetwork.com.mx.csr
#MICRO_TLS_KEY_FILE=/certs/client1.dc1.plusnetwork.com.mx.key
#MICRO_TLS_CLIENT_CA_FILE=/certs/client.dc1.plusnetwork.com.mx-ca-crt.pem

#MICRO_SERVICE_ENDPOINT=127.0.0.1:8501
#MICRO_REGISTRY=127.0.0.1
#MICRO_REGISTRY_ADDRESS=127.0.0.1:8501
#MICRO_SERVICE_ENDPOINT=server1:8501
#MICRO_REGISTRY=server1
#MICRO_REGISTRY_ADDRESS=server1:8501
##SECURE Protocol https
# -registry value                Registry for discovery. etcd, mdns [$MICRO_REGISTRY]
#    --registry_address value        Comma-separated list of registry addresses [$MICRO_REGISTRY_ADDRESS]
#    --runtime value                 Runtime for building and running services e.g local, kubernetes (default: "local") [$MICRO_RUNTIME]
#    --selector value                Selector used to pick nodes for querying [$MICRO_SELECTOR]
#    --transport value               Transport mechanism used; http [$MICRO_TRANSPORT]
#    --transport_address value       Comma-separated list of transport addresses [$MICRO_TRANSPORT_ADDRESS]
#    --local                         Enable local only development
#    --enable_acme                   Enables ACME support via Let's Encrypt. ACME hosts should also be specified. [$MICRO_ENABLE_ACME]
#    --acme_hosts value              Comma separated list of hostnames to manage ACME certs for [$MICRO_ACME_HOSTS]
#    --acme_provider value           The provider that will be used to communicate with Let's Encrypt. Valid options: autocert, certmagic [$MICRO_ACME_PROVIDER]
#    --enable_tls                    Enable TLS support. Expects cert and key file to be specified [$MICRO_ENABLE_TLS]
#    --tls_cert_file value           Path to the TLS Certificate file [$MICRO_TLS_CERT_FILE]
#    --tls_key_file value            Path to the TLS Key file [$MICRO_TLS_KEY_FILE]
#    --tls_client_ca_file value      Path to the TLS CA file to verify clients against [$MICRO_TLS_CLIENT_CA_FILE]
#    --api_address value             Set the api address e.g 0.0.0.0:8080 [$MICRO_API_ADDRESS]
#    --proxy_address value           Proxy requests via the HTTP address specified [$MICRO_PROXY_ADDRESS]
#    --web_address value             Set the web UI address e.g 0.0.0.0:8082 [$MICRO_WEB_ADDRESS]
#    --network value                 Set the micro network name: local, go.micro [$MICRO_NETWORK]
#    --network_address value         Set the micro network address e.g. :9093 [$MICRO_NETWORK_ADDRESS]
#    --router_address value          Set the micro router address e.g. :8084 [$MICRO_ROUTER_ADDRESS]
#    --gateway_address value         Set the micro default gateway address e.g. :9094 [$MICRO_GATEWAY_ADDRESS]
#    --tunnel_address value          Set the micro tunnel address e.g. :8083 [$MICRO_TUNNEL_ADDRESS]
#    --api_handler value             Specify the request handler to be used for mapping HTTP requests to services; {api, proxy, rpc} [$MICRO_API_HANDLER]
#    --api_namespace value           Set the namespace used by the API e.g. com.example.api [$MICRO_API_NAMESPACE]
#    --web_namespace value           Set the namespace used by the Web proxy e.g. com.example.web [$MICRO_WEB_NAMESPACE]
#    --enable_stats                  Enable stats [$MICRO_ENABLE_STATS]
#    --auto_update                   Enable automatic updates [$MICRO_AUTO_UPDATE]
#    --report_usage                  Report usage statistics [$MICRO_REPORT_USAGE]
#    --namespace value               Set the micro service namespace (default: "go.micro") [$MICRO_NAMESPACE]
#    --plugin value                  Comma separated list of plugins e.g broker/rabbitmq, registry/etcd, micro/basic_auth, /path/to/plugin.so [$MICRO_PLUGIN]
#    --help, -h                      show help
#    --version, -v                   print the version
